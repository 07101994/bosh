---
groups:
  - name: bosh
    jobs:
      - unit-2.4
      - unit-2.4-mysql
      - unit-2.4-postgres
      - unit-2.4-db-migrations-rds
      - blobstore-client-integration
      - integration-postgres-gocli-sha2
      - integration-mysql-gocli-sha1
      # - load-tests-postgres
      # - load-tests-mysql
      # - legacy-load-tests-postgres
      # - legacy-load-tests-mysql
      - fuzz-tests
      - candidate-release
      - finalize-bosh-release
      - export-final-release
      - bats-centos
      - bats-ubuntu
      - brats-ubuntu
      - upgrade-tests
      - blobstore-performance

  - name: mysql
    jobs:
      - unit-2.4-mysql
      - unit-2.4-db-migrations-rds
      - integration-mysql-gocli-sha1

  - name: postgres
    jobs:
      - unit-2.4-postgres
      - unit-2.4-db-migrations-rds

  - name: finalize
    jobs:
      - finalize-bosh-release
      - export-final-release

shared:
  - &deploy-director
    task: deploy-director
    tags: [vsphere-v6.5]
    file: bosh-src/ci/bats/tasks/deploy-director.yml
    params:
      BAT_INFRASTRUCTURE: vsphere
      BOSH_CLIENT:                          ((stemcell-test-director-username))
      BOSH_CLIENT_SECRET:                   ((stemcell-test-director-password))
      BOSH_VSPHERE_VCENTER:                 ((vcenter-ip))
      BOSH_VSPHERE_VCENTER_USER:            ((vcenter-user))
      BOSH_VSPHERE_VCENTER_PASSWORD:        ((vcenter-password))
      BOSH_VSPHERE_VERSION:                 ((vsphere-version))
      BOSH_VSPHERE_VCENTER_DC:              ((vcenter-dc))
      BOSH_VSPHERE_VCENTER_CLUSTER:         ((vcenter-cluster))
      BOSH_VSPHERE_VCENTER_DATASTORE:       ((vcenter-datastore))
      BOSH_VSPHERE_VCENTER_VLAN:            ((vcenter-vlan))
      BOSH_VSPHERE_VCENTER_VM_FOLDER:       ((vcenter-vm-folder))
      BOSH_VSPHERE_VCENTER_TEMPLATE_FOLDER: ((vcenter-template-folder))
      BOSH_VSPHERE_VCENTER_DISK_PATH:       ((vcenter-disk-path))
      BOSH_VSPHERE_VCENTER_RP:              ((vcenter-rp))
      DEPLOY_ARGS: |
        -o bosh-deployment/vsphere/resource-pool.yml

  - &prepare-bats-config
    task: prepare-bats
    tags: [vsphere-v6.5]
    file: bosh-src/ci/bats/iaas/vsphere/prepare-bats-config.yml

  - &run-bats
    task: run-bats
    tags: [vsphere-v6.5]
    file: bats/ci/tasks/run-bats.yml

  - &teardown
    task: teardown
    tags: [vsphere-v6.5]
    file: bosh-src/ci/bats/tasks/destroy-director.yml

jobs:
  - name: unit-2.4
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: every-sunday, trigger: true }

      - task: test
        file: bosh-src/ci/tasks/test-unit.yml
        params:
          RUBY_VERSION: 2.4.4
          DB: sqlite

  - name: unit-2.4-mysql
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: every-sunday, trigger: true }
      - aggregate:
        - task: test-mysql-5.5
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-mysql-5.5
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.4.4
              DB: mysql

        - task: test-mysql-5.6
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-mysql-5.6
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.4.4
              DB: mysql

        - task: test-mysql-5.7
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-mysql-5.7
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.4.4
              DB: mysql

  - name: unit-2.4-postgres
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: every-sunday, trigger: true }
      - aggregate:
        - task: test-postgres-9.3
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-postgres-9.3
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.4.4
              DB: postgresql
              DB_VERSION: 9.3

        - task: test-postgres-9.4
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-postgres-9.4
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.4.4
              DB: postgresql
              DB_VERSION: 9.4

        - task: test-postgres-9.5
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-postgres-9.5
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.4.4
              DB: postgresql
              DB_VERSION: 9.5

        - task: test-postgres-9.6
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-postgres-9.6
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.4.4
              DB: postgresql
              DB_VERSION: 9.6

  - name: unit-2.4-db-migrations-rds
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - put: rds-pool
        params: {acquire: true}
      - { get: bosh-src, trigger: true }
      - aggregate:
        - task: test-mysql-rds
          privileged: true
          file: bosh-src/ci/tasks/test-unit-remote-db.yml
          params:
            RUBY_VERSION: 2.4.4
            DB: mysql
            DB_HOST: ((mysql-rds-host))
            DB_USER: ((mysql-rds-user))
            DB_PASSWORD: ((mysql-rds-password))
            AWS_ACCESS_KEY_ID: ((mysql-rds-aws-access-key-id))
            AWS_SECRET_ACCESS_KEY: ((mysql-rds-aws-secret-access-key))
            AWS_REGION: ((mysql-rds-aws-region))
            RDS_MYSQL_DB_IDENTIFIER: ((mysql-rds-db-identifier))
        - task: test-postgresql-rds
          privileged: true
          file: bosh-src/ci/tasks/test-unit-remote-db.yml
          params:
            RUBY_VERSION: 2.4.4
            DB: postgresql
            DB_HOST: ((postgresql-rds-host))
            DB_USER: ((postgresql-rds-user))
            DB_PASSWORD: ((postgresql-rds-password))
        ensure:
          put: rds-pool
          params: {release: rds-pool}

  - name: blobstore-client-integration
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: every-sunday, trigger: true }
      - aggregate:
        - task: test-s3
          file: bosh-src/ci/tasks/test-s3-blobstore-client-integration.yml
          params:
            access_key_id: ((blobstore_client_aws_access_key_id))
            secret_access_key: ((blobstore_client_aws_secret_access_key))
            s3_region: ((blobstore_client_aws_s3_region))
            s3_host: ((blobstore_client_aws_s3_host))
            run_aws_tests: "Not null"
        - task: test-local
          file: bosh-src/ci/tasks/test-local-blobstore-client-integration.yml
        - task: test-dav
          file: bosh-src/ci/tasks/test-dav-blobstore-client-integration.yml
        - task: test-gcs
          file: bosh-src/ci/tasks/test-gcs-blobstore-client-integration.yml
          params:
            google_project: ((blobstore_client_google_project))
            google_json_key_data: ((blobstore_client_google_json_key_data))

  - name: blobstore-performance
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: davcli, trigger: true }
      - { get: every-sunday, trigger: true }
      - task: test
        privileged: true
        file: bosh-src/ci/tasks/test-blobstore-load.yml

  - name: integration-postgres-gocli-sha2
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - aggregate:
        - get: bosh-src
          trigger: true
        - get: bosh-cli
        - get: bosh-agent
        - get: every-sunday
          trigger: true
      - aggregate:
        - task: test-group-1
          privileged: true
          file: bosh-src/ci/tasks/test-integration-gocli.yml
          tags: ["bosh-integration-7"]
          params:
            DB:           postgresql
            RUBY_VERSION: 2.4.4
            NUM_GROUPS:   24
            GROUP:        1,4,7,10,13,16,19,22
            SHA2_MODE:    true

        - task: test-group-2
          privileged: true
          file: bosh-src/ci/tasks/test-integration-gocli.yml
          tags: ["bosh-integration-8"]
          params:
            DB:           postgresql
            RUBY_VERSION: 2.4.4
            NUM_GROUPS:   24
            GROUP:        2,5,8,11,14,17,20,23
            SHA2_MODE:    true

        - task: test-group-3
          privileged: true
          file: bosh-src/ci/tasks/test-integration-gocli.yml
          tags: ["bosh-integration-9"]
          params:
            DB:           postgresql
            RUBY_VERSION: 2.4.4
            NUM_GROUPS:   24
            GROUP:        3,6,9,12,15,18,21,24
            SHA2_MODE:    true

  - name: integration-mysql-gocli-sha1
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - aggregate:
        - get: bosh-src
          trigger: true
        - get: bosh-cli
        - get: bosh-agent
        - get: every-sunday
          trigger: true
      - aggregate:
        - task: test-group-1
          privileged: true
          file: bosh-src/ci/tasks/test-integration-gocli.yml
          tags: ["bosh-integration-4"]
          params:
            DB:           mysql
            RUBY_VERSION: 2.4.4
            NUM_GROUPS: 24
            GROUP:      1,4,7,10,13,16,19,22

        - task: test-group-2
          privileged: true
          file: bosh-src/ci/tasks/test-integration-gocli.yml
          tags: ["bosh-integration-5"]
          params:
            DB:           mysql
            RUBY_VERSION: 2.4.4
            NUM_GROUPS: 24
            GROUP:      2,5,8,11,14,17,20,23

        - task: test-group-3
          privileged: true
          file: bosh-src/ci/tasks/test-integration-gocli.yml
          tags: ["bosh-integration-6"]
          params:
            DB:           mysql
            RUBY_VERSION: 2.4.4
            NUM_GROUPS: 24
            GROUP:      3,6,9,12,15,18,21,24

  - name: upgrade-tests
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - aggregate:
        - get: bosh-src
          trigger: true
        - get: bosh-cli
        - get: bosh-agent
        - get: every-sunday
          trigger: true
      - aggregate:
        - task: upgrade-with-postgres
          privileged: true
          file: bosh-src/ci/tasks/test-upgrade.yml
          tags: ["bosh-integration"]
          params:
            DB: postgresql
            RUBY_VERSION: 2.4.4

        - task: upgrade-with-mysql
          privileged: true
          file: bosh-src/ci/tasks/test-upgrade.yml
          tags: ["bosh-integration"]
          params:
            DB: mysql
            RUBY_VERSION: 2.4.4

  - name: fuzz-tests
    public: true
    serial: true
    build_logs_to_retain: 2500
    plan:
    - { get: fuzz-interval-trigger, trigger: true }
    - { get: bosh-src, trigger: true }
    - { get: bosh-agent }
    - { get: bosh-fuzz-tests }
    - { get: bosh-cli }

    - task: test
      privileged: true
      file: bosh-fuzz-tests/ci/tasks/test.yml
      tags: ["bosh-integration"]
      params:
        BOSH_SRC_PATH: bosh-src/src
        RUBY_VERSION: 2.4.4

  - name: candidate-release
    plan:
    - get: bosh-src
      trigger: true
      passed:
      - unit-2.4
      - unit-2.4-mysql
      - unit-2.4-postgres
      - integration-mysql-gocli-sha1
      - integration-postgres-gocli-sha2
      - blobstore-client-integration
      - fuzz-tests
      - upgrade-tests
      - blobstore-performance
    - get: bosh-cli
    - get: candidate-version
      params:
        bump: minor
    - task: make
      file: bosh-src/ci/tasks/make-candidate.yml
    - put: bosh-candidate-release-tarballs
      params:
        file: "release/bosh-dev-release.tgz"

  - name: bats-centos
    serial: true
    plan:
    - do:
      - aggregate:
        - get: bosh-release
          resource: bosh-candidate-release-tarballs
          trigger: true
          passed:
          - candidate-release
        - get: cpi-release
        - get: stemcell
          resource: vsphere-esxi-centos-7
        - get: bosh-cli
        - get: bats
        - get: bosh-deployment
        - get: bosh-src
          passed:
          - candidate-release

      - put: environment
        params:
          acquire: true

      - do:
        - <<: *deploy-director

        - <<: *prepare-bats-config
          params:
            STEMCELL_NAME: bosh-vsphere-esxi-centos-7-go_agent

        - <<: *run-bats
        ensure:
          do:
            - <<: *teardown
      ensure:
        do:
        - {put: environment, params: {release: environment}}

  - name: bats-ubuntu
    serial: true
    plan:
    - do:
      - aggregate:
        - get: bosh-release
          resource: bosh-candidate-release-tarballs
          trigger: true
          passed:
            - candidate-release
        - get: cpi-release
        - get: stemcell
          resource: vsphere-esxi-ubuntu-trusty
        - get: bosh-cli
        - get: bats
        - get: bosh-deployment
        - get: bosh-src
          passed:
            - candidate-release

      - put: environment
        params:
          acquire: true

      - do:
        - <<: *deploy-director

        - <<: *prepare-bats-config
          params:
            STEMCELL_NAME: bosh-vsphere-esxi-ubuntu-trusty-go_agent

        - <<: *run-bats
        ensure:
          do:
            - <<: *teardown
      ensure:
        do:
        - {put: environment, params: {release: environment}}

  - name: brats-ubuntu
    serial: true
    plan:
    - do:
      - aggregate:
        - get: bosh-src
          passed:
          - candidate-release
        - get: bosh-dns-release
        - get: warden-ubuntu-trusty
        - get: bosh-release
          resource: bosh-candidate-release-tarballs
          trigger: true
          passed:
            - candidate-release
        - get: every-sunday
          trigger: true
      - task: test-brats
        file: bosh-src/ci/tasks/test-brats.yml
        tags: ["worker-brats"]
        privileged: true
        input_mapping:
          stemcell: warden-ubuntu-trusty

  - name: finalize-bosh-release
    serial: true
    plan:
      - aggregate:
        - get: bosh-src
          passed:
            - bats-centos
            - bats-ubuntu
        - get: bosh-master
        - get: bosh-dev-release
          resource: bosh-candidate-release-tarballs
          passed:
            - bats-centos
            - bats-ubuntu
        - get: bosh-cli
        - get: candidate-version
          params:
            bump: minor
      - task: promote-release
        file: bosh-src/ci/tasks/finalize-bosh-release.yml
        params:
          BLOBSTORE_ACCESS_KEY_ID: ((bosh_release_access_key_id))
          BLOBSTORE_SECRET_ACCESS_KEY: ((bosh_release_secret_access_key))
      - put: candidate-version
        params:
          file: bumped-candidate-version/version
      - put: bosh-master
        params:
          repository: bosh-master-with-final
      - put: bosh-src
        params:
          repository: bosh-src-with-bumped-version
          tag: bosh-src-with-bumped-version-tag/tag-name
          annotate: bosh-src-with-bumped-version-tag/annotate-msg

  - name: export-final-release
    serial: true
    plan:
    - aggregate:
      - get: bosh-master
      - get: candidate-version
        passed: [finalize-bosh-release]
        trigger: true
      - get: warden-ubuntu-trusty
        passed: [brats-ubuntu]
        trigger: true
    - task: export-final-release
      file: bosh-master/ci/tasks/export-final-release.yml
      privileged: true
      input_mapping:
        version: candidate-version
        stemcell: warden-ubuntu-trusty
        bosh-src: bosh-master
    - task: push-bosh-compiled-releases
      file: bosh-master/ci/tasks/push-bosh-compiled-release.yml
      input_mapping:
        bosh-src: bosh-master
      params:
        AWS_ACCESS_KEY_ID: ((bosh-compiled-releases-aws-access-key-id))
        AWS_SECRET_ACCESS_KEY: ((bosh-compiled-releases-aws-secret-access-key))
        git_private_key: ((bosh-compiled-releases-index-deploy-key))

resources:
  - name: bosh-src
    type: git
    source:
      uri: ((bosh_src_url))
      branch: 265.x
      private_key: ((github_deployment_key))

  - name: candidate-version
    type: semver
    source:
      bucket: {{candidate_release_bucket}}
      key: 265.x/version
      initial_version: 265.0.0
      access_key_id: {{candidate_release_access_key_id}}
      secret_access_key: {{candidate_release_secret_access_key}}

  - name: bosh-candidate-release-tarballs
    type: s3
    source:
      bucket: {{candidate_release_bucket}}
      access_key_id: {{candidate_release_access_key_id}}
      secret_access_key: {{candidate_release_secret_access_key}}
      versioned_file: "265.x/bosh-dev-release.tgz"

  - name: davcli
    type: s3
    source:
      regexp: davcli-(.*)-linux-amd64
      bucket: davcli
      region_name: us-east-1

  - name: bosh-fuzz-tests
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-fuzz-tests.git
      branch: master

  # - name: bosh-load-tests-workspace
  #   type: git
  #   source:
  #     uri: https://github.com/cloudfoundry-incubator/bosh-load-tests-workspace
  #     branch: master

  - name: bosh-master
    type: git
    source:
      uri: ((bosh_src_url))
      branch: master
      private_key: ((github_deployment_key))

  - name: fuzz-interval-trigger
    type: time
    source:
      interval: 15m

  # - name: load-tests-interval
  #   type: time
  #   source:
  #     interval: 5h

  - name: every-sunday
    type: time
    source:
      start: 1:00 PM
      stop: 9:00 PM
      days: [Sunday]

  - name: bosh-cli
    type: s3
    source:
      regexp: alpha-bosh-cli-(.*)-linux-amd64
      bucket: ((bosh_cli_aws_s3_alpha_release_bucket))
      region_name: ((bosh_cli_aws_s3_release_bucket_region))

  - name: bosh-dns-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh-dns-release

  #
  # BATS
  #

  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master

  - name: environment
    type: pool
    source:
      pool: vsphere
      uri: git@github.com:pivotal-cf-experimental/bats-concourse-pool.git
      branch: master
      private_key: ((github_deployment_key__bosh-cpi-environments))

  - name: vsphere-esxi-ubuntu-trusty
    type: bosh-io-stemcell
    source:
      name: bosh-vsphere-esxi-ubuntu-trusty-go_agent
      version_family: 3541.latest

  - name: warden-ubuntu-trusty
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent
      version_family: 3541.latest

  - name: vsphere-esxi-centos-7
    type: bosh-io-stemcell
    source:
      name: bosh-vsphere-esxi-centos-7-go_agent
      version_family: 3541.latest

  - name: cpi-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/bosh-vsphere-cpi-release

  - name: bosh-agent
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-agent
      branch: master

  - name: rds-pool
    type: pool
    source:
      uri: git@github.com:cloudfoundry/bosh-ci-pools
      branch: master
      pool: unit-24-db-migrations-rds
      private_key: ((bosh_ci_pools_deploy_key))
